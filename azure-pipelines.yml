triggerss:
- master

pool:
  vmImage: 'ubuntu-latest'
stages:
- stage: Build
  jobs:
    - job: firstjob
      steps:
      - bash: echo Build First Job
      - bash: echo $(pipelinevariable)
      - bash: echo $(Build.BuildNumber)
      - bash: echo $(Build.BuildId)
      - bash: echo $(Build.SourceBranchName)
      - bash: echo $(Build.SourcesDirectory)
      - bash: echo $(System.DefaultWorkingDirectory)
      - bash: ls -R  $(System.DefaultWorkingDirectory)
      - bash: echo $(System.DefaultWorkingDirectory)
      - bash: echo $(Build.ArtifactStagingDirectory)
      - bash: java -version
      - bash: node --version
      - bash: python --version
      - bash: mvn -version
      - bash: ls -R $(Build.ArtifactsStagingDirectory)
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.yml
            **/*.java
          TargetFolder: '$(Build.ArtifactsStagingDirectory)'
      - bash: ls -R $(Build.ArtifactsStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
#     - job: SecondJob
#       steps:
#       - bash: echo Build Second Job
# # - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#     - job: DevFist
#       steps:
#       - bash: echo $(enviroment)DeployJob
#     - job: DevSeccond
#       steps:
#       - bash: echo Dev Second Job
# - stage: QADeploy
#   variables:
#      environment: 
#   dependsOn: Build
#   jobs:
#     - job: QAJob
#       steps:
#       - bash: echo $(enviroment)QADeploy
# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#     - job: ProductionsJob
#       steps:
#       - bash: echo $(enviroment)ProdDeploy
